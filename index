<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Stopwatch Game</title>
    <style>
      body {
        background-color: #f2f2f2;
        text-align: center;
        font-size: 20px;
      }

      #startBtn, #stopBtn {
        display: block;
        margin: 0 auto;
        width: 200px;
        height: 200px;
        border-radius: 50%;
        background-color: #4CAF50;
        color: white;
        font-size: 40px;
        line-height: 200px;
        cursor: pointer;
      }

      #stopBtn {
        background-color: #F44336;
      }

      #result {
        font-size: 40px;
        margin-top: 50px;
      }

      #moreStatsBtn {
        margin-top: 30px;
        font-size: 20px;
        background-color: #008CBA;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
      }
    </style>
</head>
<body>
<button id="startBtn">Start</button>
<div id="result"></div>
<button id="moreStatsBtn">More Statistics</button>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.3.0/raphael.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>

<script style="text/javascript">
      var startTime;
      var stopTime;
      var timerId;
      var attempts = [];

      function startTimer() {
        $('#startBtn').text('Stop').attr('id', 'stopBtn');
        startTime = new Date().getTime();
        timerId = setTimeout(showResult, 4000);
      }

      function stopTimer() {
        $('#stopBtn').text('Start').attr('id', 'startBtn');
        clearTimeout(timerId);
        stopTime = new Date().getTime();
        var diff = (stopTime - startTime) / 1000;
        var color;
        if (diff >= 3.8 && diff <= 4.2) {
          color = '#4CAF50'; // green
        } else if (diff >= 3.6 && diff <= 4.4) {
          color = '#008CBA'; // blue
        } else if (diff >= 3.5 && diff <= 4.5) {
          color = '#FFC107'; // yellow
        } else {
          color = '#F44336'; // red
        }
        $('#result').css('background-color', color).text(diff.toFixed(2) + 's');
        attempts.push({
          'attemptNumber': attempts.length + 1,
          'startTime': startTime,
          'stopTime': stopTime,
          'result': diff
        });
      }

      function showResult() {
        stopTimer();
        $('#result').css('background-color', '#f2f2f2').text('TIMEOUT');
      }

      $('#startBtn, #stopBtn').click(function() {
        if ($(this).attr('id') == 'startBtn') {
          startTimer();
        } else {
stopTimer();
}
});
      $('#moreStatsBtn').click(function() {
    
    var summary = '';
    attempts.forEach(function(attempt) {
      summary += 'Attempt ' + attempt.attemptNumber + ': Start Time=' + attempt.startTime + ', Stop Time=' + attempt.stopTime + ', Result=' + attempt.result.toFixed(2) + 's\n';
    });
    alert(summary);

    
    var totalAttempts = attempts.length;
    var results = attempts.map(attempt => attempt.result);
    var minResult = Math.min(...results);
    var maxResult = Math.max(...results);
    var avgResult = results.reduce((sum, result) => sum + result, 0) / totalAttempts;
    var chartData = attempts.map(attempt => {
      return {
        x: attempt.attemptNumber,
        y: attempt.result
      }
    });
    Morris.Line({
      element: 'chart',
      data: chartData,
      xkey: 'x',
      ykeys: ['y'],
      labels: ['Result'],
      ymin: 3.5,
      ymax: 4.5,
      yLabelFormat: function(y) {
        return y.toFixed(2) + 's';
      }
    });
    $('#stats').html('Total Attempts: ' + totalAttempts + '<br>Minimum Result: ' + minResult.toFixed(2) + 's<br>Maximum Result: ' + maxResult.toFixed(2) + 's<br>Average Result: ' + avgResult.toFixed(2) + 's<br><div id="chart"></div>');
  });
</script>
<div id="stats"></div>
</body>
</html>

